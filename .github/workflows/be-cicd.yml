name: CI/CD pipeline for Backend Service

on:
  push:
    branches: [master]

env:
  DOCKER_IMAGE: leetuan0342/my-spring-app
  DOCKER_TAG: 1.0


jobs:
  build:
    name: Build Backend Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build --no-cache -t $DOCKER_IMAGE:$DOCKER_TAG .
          docker push $DOCKER_IMAGE:$DOCKER_TAG

      - name: Copy necessary files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 3.0.104.231
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "compose.yml"
          target: "~/customer-service"

  deploy:
    name: Deploy Backend Service
    runs-on: ubuntu-latest
    needs: ["build"]

    steps:
      - name: Deploy Backend Service
        uses: appleboy/ssh-action@master
        with:
          host: 3.0.104.231
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Moving to dir to deployment..."
            cd ~/customer-service
            
            echo "Creating network (if not exists)..."
            echo "Currently, we re-use customer-network"
            sudo docker network create customer-network 

            echo "Stopping old container if exists..."
            sudo docker compose -f compose.yml stop customer-service 
            sudo docker compose -f compose.yml rm -f customer-service 
            
            echo "Pulling latest image..."
            sudo docker compose -f compose.yml pull customer-service 
            
            echo "Starting new container with correct name..."
            sudo docker compose -f compose.yml up -d --remove-orphans
            
            echo "Deployment completed!"